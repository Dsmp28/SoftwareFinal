apiVersion: v1
kind: ConfigMap
metadata:
  name: keycloak-realm-config
  namespace: default
data:
  realm-export.json: |
    {
      "realm": "spring-microservices-security-realms",
      "enabled": true,
      "sslRequired": "external",
      "registrationAllowed": true,
      "loginWithEmailAllowed": true,
      "duplicateEmailsAllowed": false,
      "resetPasswordAllowed": false,
      "editUsernameAllowed": false,
      "bruteForceProtected": true,
      "clients": [
        {
          "clientId": "microservices-client",
          "enabled": true,
          "clientAuthenticatorType": "client-secret",
          "secret": "secret",
          "redirectUris": ["*"],
          "webOrigins": ["*"],
          "protocol": "openid-connect",
          "publicClient": true,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": true,
          "directAccessGrantsEnabled": true
        }
      ],
      "users": [
        {
          "username": "admin",
          "enabled": true,
          "credentials": [
            {
              "type": "password",
              "value": "admin",
              "temporary": false
            }
          ]
        }
      ]
    }
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: keycloak-mysql-pvc
  namespace: default
spec:
  storageClassName: standard-rwo
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak-mysql
  namespace: default
  labels:
    app: keycloak-mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak-mysql
  template:
    metadata:
      labels:
        app: keycloak-mysql
    spec:
      containers:
      - name: mysql
        image: mysql:8.0
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "root"
        - name: MYSQL_DATABASE
          value: "keycloak"
        - name: MYSQL_USER
          value: "keycloak"
        - name: MYSQL_PASSWORD
          value: "password"
        volumeMounts:
        - name: mysql-storage
          mountPath: /var/lib/mysql
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
      volumes:
      - name: mysql-storage
        persistentVolumeClaim:
          claimName: keycloak-mysql-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak-mysql
  namespace: default
  labels:
    app: keycloak-mysql
spec:
  type: ClusterIP
  ports:
  - port: 3306
    targetPort: 3306
    protocol: TCP
  selector:
    app: keycloak-mysql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: default
  labels:
    app: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
      - name: keycloak
        image: quay.io/keycloak/keycloak:24.0.1
        ports:
        - containerPort: 8080
        args:
        - "start"
        - "--import-realm"
        - "--hostname-strict=false"
        - "--hostname-strict-https=false"
        - "--proxy=edge"
        env:
        - name: KC_DB
          value: "mysql"
        - name: KC_DB_URL_HOST
          value: "keycloak-mysql"
        - name: KC_DB_URL_DATABASE
          value: "keycloak"
        - name: KC_DB_USERNAME
          value: "keycloak"
        - name: KC_DB_PASSWORD
          value: "password"
        - name: KEYCLOAK_ADMIN
          value: "admin"
        - name: KEYCLOAK_ADMIN_PASSWORD
          value: "admin"
        - name: KC_HTTP_ENABLED
          value: "true"
        - name: KC_HOSTNAME_STRICT
          value: "false"
        volumeMounts:
        - name: realm-config
          mountPath: /opt/keycloak/data/import
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        readinessProbe:
          httpGet:
            path: /realms/master
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
        livenessProbe:
          httpGet:
            path: /realms/master
            port: 8080
          initialDelaySeconds: 120
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
      volumes:
      - name: realm-config
        configMap:
          name: keycloak-realm-config
      initContainers:
      - name: wait-for-mysql
        image: busybox:1.35
        command: ['sh', '-c', 'until nslookup keycloak-mysql; do echo waiting for keycloak-mysql; sleep 2; done;']
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
  namespace: default
  labels:
    app: keycloak
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app: keycloak